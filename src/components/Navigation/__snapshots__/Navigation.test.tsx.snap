// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation when visited from a known path renders correctly 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "test",
        "pathname": "/",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "test",
            "pathname": "/",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "test",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Navigation
      siteName="Test Site"
    >
      <Styled(MuiBox)
        p={1}
      >
        <div
          className="MuiBox-root MuiBox-root-2"
        >
          <Heading
            align="center"
            level={1}
          >
            <WithStyles(ForwardRef(Typography))
              align="center"
              color="secondary"
              component="h1"
              variant="h4"
            >
              <ForwardRef(Typography)
                align="center"
                classes={
                  Object {
                    "alignCenter": "MuiTypography-alignCenter",
                    "alignJustify": "MuiTypography-alignJustify",
                    "alignLeft": "MuiTypography-alignLeft",
                    "alignRight": "MuiTypography-alignRight",
                    "body1": "MuiTypography-body1",
                    "body2": "MuiTypography-body2",
                    "button": "MuiTypography-button",
                    "caption": "MuiTypography-caption",
                    "colorError": "MuiTypography-colorError",
                    "colorInherit": "MuiTypography-colorInherit",
                    "colorPrimary": "MuiTypography-colorPrimary",
                    "colorSecondary": "MuiTypography-colorSecondary",
                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                    "displayBlock": "MuiTypography-displayBlock",
                    "displayInline": "MuiTypography-displayInline",
                    "gutterBottom": "MuiTypography-gutterBottom",
                    "h1": "MuiTypography-h1",
                    "h2": "MuiTypography-h2",
                    "h3": "MuiTypography-h3",
                    "h4": "MuiTypography-h4",
                    "h5": "MuiTypography-h5",
                    "h6": "MuiTypography-h6",
                    "noWrap": "MuiTypography-noWrap",
                    "overline": "MuiTypography-overline",
                    "paragraph": "MuiTypography-paragraph",
                    "root": "MuiTypography-root",
                    "srOnly": "MuiTypography-srOnly",
                    "subtitle1": "MuiTypography-subtitle1",
                    "subtitle2": "MuiTypography-subtitle2",
                  }
                }
                color="secondary"
                component="h1"
                variant="h4"
              >
                <h1
                  className="MuiTypography-root MuiTypography-h4 MuiTypography-colorSecondary MuiTypography-alignCenter"
                >
                  <strong>
                    Test Site
                  </strong>
                </h1>
              </ForwardRef(Typography)>
            </WithStyles(ForwardRef(Typography))>
          </Heading>
        </div>
      </Styled(MuiBox)>
      <WithStyles(ForwardRef(Divider))>
        <ForwardRef(Divider)
          classes={
            Object {
              "absolute": "MuiDivider-absolute",
              "inset": "MuiDivider-inset",
              "light": "MuiDivider-light",
              "middle": "MuiDivider-middle",
              "root": "MuiDivider-root",
              "vertical": "MuiDivider-vertical",
            }
          }
        >
          <hr
            className="MuiDivider-root"
          />
        </ForwardRef(Divider)>
      </WithStyles(ForwardRef(Divider))>
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <WithStyles(ForwardRef(ListItem))
              button={true}
              key="CSV to XLS"
            >
              <ForwardRef(ListItem)
                button={true}
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemIcon))
                        key=".0"
                      >
                        <ForwardRef(ListItemIcon)
                          classes={
                            Object {
                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                              "root": "MuiListItemIcon-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemIcon-root"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </div>
                        </ForwardRef(ListItemIcon)>
                      </WithStyles(ForwardRef(ListItemIcon))>
                      <WithStyles(ForwardRef(ListItemText))
                        key=".1"
                        primary="CSV to XLS"
                      >
                        <ForwardRef(ListItemText)
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="CSV to XLS"
                        >
                          <div
                            className="MuiListItemText-root"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              variant="body1"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                variant="body1"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                >
                                  CSV to XLS
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              key="XML to JSON"
            >
              <ForwardRef(ListItem)
                button={true}
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemIcon))
                        key=".0"
                      >
                        <ForwardRef(ListItemIcon)
                          classes={
                            Object {
                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                              "root": "MuiListItemIcon-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemIcon-root"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </div>
                        </ForwardRef(ListItemIcon)>
                      </WithStyles(ForwardRef(ListItemIcon))>
                      <WithStyles(ForwardRef(ListItemText))
                        key=".1"
                        primary="XML to JSON"
                      >
                        <ForwardRef(ListItemText)
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="XML to JSON"
                        >
                          <div
                            className="MuiListItemText-root"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              variant="body1"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                variant="body1"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                >
                                  XML to JSON
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              key="Typescript to Javascript"
            >
              <ForwardRef(ListItem)
                button={true}
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemIcon))
                        key=".0"
                      >
                        <ForwardRef(ListItemIcon)
                          classes={
                            Object {
                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                              "root": "MuiListItemIcon-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemIcon-root"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </div>
                        </ForwardRef(ListItemIcon)>
                      </WithStyles(ForwardRef(ListItemIcon))>
                      <WithStyles(ForwardRef(ListItemText))
                        key=".1"
                        primary="Typescript to Javascript"
                      >
                        <ForwardRef(ListItemText)
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="Typescript to Javascript"
                        >
                          <div
                            className="MuiListItemText-root"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              variant="body1"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                variant="body1"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                >
                                  Typescript to Javascript
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              key="SCSS to CSS"
            >
              <ForwardRef(ListItem)
                button={true}
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemIcon))
                        key=".0"
                      >
                        <ForwardRef(ListItemIcon)
                          classes={
                            Object {
                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                              "root": "MuiListItemIcon-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemIcon-root"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </div>
                        </ForwardRef(ListItemIcon)>
                      </WithStyles(ForwardRef(ListItemIcon))>
                      <WithStyles(ForwardRef(ListItemText))
                        key=".1"
                        primary="SCSS to CSS"
                      >
                        <ForwardRef(ListItemText)
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="SCSS to CSS"
                        >
                          <div
                            className="MuiListItemText-root"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              variant="body1"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                variant="body1"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                >
                                  SCSS to CSS
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </Navigation>
  </Router>
</MemoryRouter>
`;

exports[`Navigation when visited from an unknown path renders correctly 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "test",
        "pathname": "/fnarglefloof",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "test",
            "pathname": "/fnarglefloof",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "test",
          "pathname": "/fnarglefloof",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Navigation
      siteName="Test Site"
    >
      <Styled(MuiBox)
        p={1}
      >
        <div
          className="MuiBox-root MuiBox-root-84"
        >
          <Heading
            align="center"
            level={1}
          >
            <WithStyles(ForwardRef(Typography))
              align="center"
              color="secondary"
              component="h1"
              variant="h4"
            >
              <ForwardRef(Typography)
                align="center"
                classes={
                  Object {
                    "alignCenter": "MuiTypography-alignCenter",
                    "alignJustify": "MuiTypography-alignJustify",
                    "alignLeft": "MuiTypography-alignLeft",
                    "alignRight": "MuiTypography-alignRight",
                    "body1": "MuiTypography-body1",
                    "body2": "MuiTypography-body2",
                    "button": "MuiTypography-button",
                    "caption": "MuiTypography-caption",
                    "colorError": "MuiTypography-colorError",
                    "colorInherit": "MuiTypography-colorInherit",
                    "colorPrimary": "MuiTypography-colorPrimary",
                    "colorSecondary": "MuiTypography-colorSecondary",
                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                    "displayBlock": "MuiTypography-displayBlock",
                    "displayInline": "MuiTypography-displayInline",
                    "gutterBottom": "MuiTypography-gutterBottom",
                    "h1": "MuiTypography-h1",
                    "h2": "MuiTypography-h2",
                    "h3": "MuiTypography-h3",
                    "h4": "MuiTypography-h4",
                    "h5": "MuiTypography-h5",
                    "h6": "MuiTypography-h6",
                    "noWrap": "MuiTypography-noWrap",
                    "overline": "MuiTypography-overline",
                    "paragraph": "MuiTypography-paragraph",
                    "root": "MuiTypography-root",
                    "srOnly": "MuiTypography-srOnly",
                    "subtitle1": "MuiTypography-subtitle1",
                    "subtitle2": "MuiTypography-subtitle2",
                  }
                }
                color="secondary"
                component="h1"
                variant="h4"
              >
                <h1
                  className="MuiTypography-root MuiTypography-h4 MuiTypography-colorSecondary MuiTypography-alignCenter"
                >
                  <strong>
                    Test Site
                  </strong>
                </h1>
              </ForwardRef(Typography)>
            </WithStyles(ForwardRef(Typography))>
          </Heading>
        </div>
      </Styled(MuiBox)>
      <WithStyles(ForwardRef(Divider))>
        <ForwardRef(Divider)
          classes={
            Object {
              "absolute": "MuiDivider-absolute",
              "inset": "MuiDivider-inset",
              "light": "MuiDivider-light",
              "middle": "MuiDivider-middle",
              "root": "MuiDivider-root",
              "vertical": "MuiDivider-vertical",
            }
          }
        >
          <hr
            className="MuiDivider-root"
          />
        </ForwardRef(Divider)>
      </WithStyles(ForwardRef(Divider))>
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <WithStyles(ForwardRef(ListItem))
              button={true}
              key="CSV to XLS"
            >
              <ForwardRef(ListItem)
                button={true}
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemIcon))
                        key=".0"
                      >
                        <ForwardRef(ListItemIcon)
                          classes={
                            Object {
                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                              "root": "MuiListItemIcon-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemIcon-root"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </div>
                        </ForwardRef(ListItemIcon)>
                      </WithStyles(ForwardRef(ListItemIcon))>
                      <WithStyles(ForwardRef(ListItemText))
                        key=".1"
                        primary="CSV to XLS"
                      >
                        <ForwardRef(ListItemText)
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="CSV to XLS"
                        >
                          <div
                            className="MuiListItemText-root"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              variant="body1"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                variant="body1"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                >
                                  CSV to XLS
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              key="XML to JSON"
            >
              <ForwardRef(ListItem)
                button={true}
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemIcon))
                        key=".0"
                      >
                        <ForwardRef(ListItemIcon)
                          classes={
                            Object {
                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                              "root": "MuiListItemIcon-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemIcon-root"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </div>
                        </ForwardRef(ListItemIcon)>
                      </WithStyles(ForwardRef(ListItemIcon))>
                      <WithStyles(ForwardRef(ListItemText))
                        key=".1"
                        primary="XML to JSON"
                      >
                        <ForwardRef(ListItemText)
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="XML to JSON"
                        >
                          <div
                            className="MuiListItemText-root"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              variant="body1"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                variant="body1"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                >
                                  XML to JSON
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              key="Typescript to Javascript"
            >
              <ForwardRef(ListItem)
                button={true}
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemIcon))
                        key=".0"
                      >
                        <ForwardRef(ListItemIcon)
                          classes={
                            Object {
                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                              "root": "MuiListItemIcon-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemIcon-root"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </div>
                        </ForwardRef(ListItemIcon)>
                      </WithStyles(ForwardRef(ListItemIcon))>
                      <WithStyles(ForwardRef(ListItemText))
                        key=".1"
                        primary="Typescript to Javascript"
                      >
                        <ForwardRef(ListItemText)
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="Typescript to Javascript"
                        >
                          <div
                            className="MuiListItemText-root"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              variant="body1"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                variant="body1"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                >
                                  Typescript to Javascript
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              key="SCSS to CSS"
            >
              <ForwardRef(ListItem)
                button={true}
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemIcon))
                        key=".0"
                      >
                        <ForwardRef(ListItemIcon)
                          classes={
                            Object {
                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                              "root": "MuiListItemIcon-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemIcon-root"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </div>
                        </ForwardRef(ListItemIcon)>
                      </WithStyles(ForwardRef(ListItemIcon))>
                      <WithStyles(ForwardRef(ListItemText))
                        key=".1"
                        primary="SCSS to CSS"
                      >
                        <ForwardRef(ListItemText)
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="SCSS to CSS"
                        >
                          <div
                            className="MuiListItemText-root"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              variant="body1"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                variant="body1"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                >
                                  SCSS to CSS
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <NoSsr>
                        <WithStyles(undefined)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(undefined)>
                      </NoSsr>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </Navigation>
  </Router>
</MemoryRouter>
`;
